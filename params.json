{
  "name": "Lei Xiaohua's learning resource about video/audio technics ",
  "tagline": "",
  "body": "# About me\r\nI'm a PHD student in Communication University of China. I have focused on video/audio technics for several years. During these years I made some demos about FFmpeg and other multimedia projects. I share these demos here and wish they can help the beginnner of video/audio technics.\r\n\r\n\r\n> ***Info about me***  \r\n> **Name:** Lei Xiaohua  \r\n> **Education:**  \r\n> Bachelor: CUC - Radio and TV Engineering  \r\n> Master:   CUC - Digital TV Technics  \r\n> Doctor:      CUC - Digital Video Technics  \r\n> **Location:** Chaoyang, Beijing, China  \r\n> **Email:** leixiaohua1020@126.com  \r\n> **Site:** <http://blog.csdn.net/leixiaohua1020>  \r\n> **SourceForge site:** <https://sourceforge.net/u/leixiaohua1020/wiki/Home/>  \r\n> **Github site:** <http://leixiaohua1020.github.com/>  \r\n\r\n![Test picture](/images/pic-henan.jpg)\r\n*************************\r\n\r\n# My projects List\r\nMy projects can be devided to following categories:  \r\n* Experiment Projects\r\n* FFmpeg Development Examples\r\n* FFmpeg Transplant Projects\r\n* Multimedia Projects Development Examples\r\n* Small Analysis Tools\r\n\r\n*************************\r\n\r\n## Experiment Projects\r\n### VideoEye\r\n_open-source stream analysis software_  \r\nProject Page: <https://github.com/leixiaohua1020/VideoEye>\r\n### TIandSI\r\n_Tools used to calculate video's TI and SI_  \r\nProject Page: <https://github.com/leixiaohua1020/TIandSI>\r\n\r\n*************************\r\n\r\n## FFmpeg Development Examples\r\nFFmpeg Examples can be used in different aspect of video / audio processing. The following picture shows the process of transcoding. It shows the position of these demos during the process of transcoding.\r\n![Test picture](/images/simplest_ffmpeg_demos.jpg)\r\n\r\n*****\r\n\r\nI also make some batch files for these FFmpeg demos:   \r\n\r\n_Git_   \r\n\r\nGit Clone All: [simplest_ffmpeg_demos_git_clone_all.sh](https://github.com/leixiaohua1020/leixiaohua1020.github.io/blob/master/batch/simplest_ffmpeg_demos_git_clone_all.sh)   \r\nGit Update All: [simplest_ffmpeg_demos_git_pull_all.sh](https://github.com/leixiaohua1020/leixiaohua1020.github.io/blob/master/batch/simplest_ffmpeg_demos_git_pull_all.sh)   \r\nGit Reset All: [simplest_ffmpeg_demos_git_reset_all.sh](https://github.com/leixiaohua1020/leixiaohua1020.github.io/blob/master/batch/simplest_ffmpeg_demos_git_reset_all.sh)   \r\nGit Archive All: [simplest_ffmpeg_demos_git_archive_all.sh](https://github.com/leixiaohua1020/leixiaohua1020.github.io/blob/master/batch/simplest_ffmpeg_demos_git_archive_all.sh)   \r\n\r\n_Compile_\r\n\r\nVC++ Compile All: [simplest_ffmpeg_demos_compile_devenv_all.bat](https://github.com/leixiaohua1020/leixiaohua1020.github.io/blob/master/batch/simplest_ffmpeg_demos_compile_devenv_all.bat)     \r\nCL.exe Compile All: [simplest_ffmpeg_demos_compile_cl_all.bat](https://github.com/leixiaohua1020/leixiaohua1020.github.io/blob/master/batch/simplest_ffmpeg_demos_compile_cl_all.bat)   \r\nMinGW Compile All: [simplest_ffmpeg_demos_compile_mingw_all.sh](https://github.com/leixiaohua1020/leixiaohua1020.github.io/blob/master/batch/simplest_ffmpeg_demos_compile_mingw_all.sh)   \r\nGCC (Linux/MacOS) Compile All: [simplest_ffmpeg_demos_compile_gcc_all.sh](https://github.com/leixiaohua1020/leixiaohua1020.github.io/blob/master/batch/simplest_ffmpeg_demos_compile_gcc_all.sh)   \r\n\r\n*****\r\n\r\n### Simplest ffmpeg player\r\n_The simplest video player based on FFmpeg_  \r\nIt contains 3 project:  \r\n* simplest_ffmpeg_player: Standard Version, suitable for biginner.\r\n* simplest_ffmpeg_player_su: SU（SDL Update）Version, Add SDL Event.\r\n* simplest_ffmpeg_decoder: A decoder that can demux container format. Uses libavcodec and libavformat.\r\n* simplest_ffmpeg_decoder_pure: A pure decoder. Only use libavcodec (Without libavformat).\r\n* simplest_video_play_sdl2. Example about using SDL2 play YUV data.\r\n* simplest_ffmpeg_helloworld: Output informations about FFmpeg libraries.\r\n  \r\nProject Page: <https://github.com/leixiaohua1020/simplest_ffmpeg_player>\r\n\r\n### Simplest ffmpeg audio player\r\n_The simplest audio player based on FFmpeg_  \r\nIt contains 3 project:  \r\n* simplest_ffmpeg_audio_player: Audio player based on FFmpeg and SDL.\r\n* simplest_ffmpeg_audio_decoder: Audio decoder. Uses libavcodec and libavformat.\r\n* simplest_audio_play_sdl2: Example about using SDL2 play PCM data.\r\n  \r\nProject Page: <https://github.com/leixiaohua1020/simplest_ffmpeg_audio_player>\r\n\r\n### Simplest ffmpeg pic encoder\r\n_The simplest picture encoder based on FFmpeg_  \r\nProject Page: <https://github.com/leixiaohua1020/simplest_ffmpeg_picture_encoder>\r\n\r\n### Simplest ffmpeg video encoder\r\n_The simplest video encoder based on FFmpeg_  \r\nIt contains 2 project:  \r\n* simplest_ffmpeg_video_encoder: Simplest video encoder. It uses libavcodec and libavformat.\r\n* simplest_ffmpeg_video_encoder_pure: Pure video encoder. It only uses libavcodec to encode video (without libavformat).\r\n  \r\nProject Page: <https://github.com/leixiaohua1020/simplest_ffmpeg_video_encoder>\r\n\r\n### Simplest ffmpeg audio encoder\r\n_The simplest audio encoder based on FFmpeg_  \r\nProject Page: <https://github.com/leixiaohua1020/simplest_ffmpeg_audio_encoder>\r\n\r\n### Simplest ffmpeg streamer\r\n_The simplest streamer based on FFmpeg_  \r\nIt contains 2 project:  \r\n* simplest_ffmpeg_streamer: stream local media files to streaming media server.\r\n* simplest_ffmpeg_receiver: save streaming media to a file.\r\n  \r\nProject Page: <https://github.com/leixiaohua1020/simplest_ffmpeg_streamer>\r\n\r\n### Simplest ffmpeg mem handler\r\n_ffmpeg's example about read/write from memory_  \r\nIt contains 2 project:  \r\n* simplest_ffmpeg_mem_player：Video Player that play video data in memory.\r\n* simplest_ffmpeg_mem_transcoder：Video Converter that convert video data in memory.\r\n  \r\nProject Page: <https://github.com/leixiaohua1020/simplest_ffmpeg_mem_handler>\r\n\r\n### Simplest ffmpeg device\r\n_FFmpeg's libavdevice examples_  \r\nThis Project contains 2 examples based on FFmpeg's libavdevice:\r\n* simplest_ffmpeg_grabdesktop: Screen Capture.\r\n* simplest_ffmpeg_readcamera: Read Camera.\r\n  \r\nProject Page: <https://github.com/leixiaohua1020/simplest_ffmpeg_device>\r\n\r\n### Simplest ffmpeg format\r\n_FFmpeg's mux/demux/remux examples_  \r\nThis Project contains examples about Video Fomat Processing based on FFmpeg:\r\n* simplest_ffmpeg_demuxer: Split Audio and Video bitstreams.\r\n* simplest_ffmpeg_demuxer_simple: Split Audio and Video bitstreams.\r\n* simplest_ffmpeg_muxer: Put Audio and Video bitstreams together.\r\n* simplest_ffmpeg_remuxer: Change Container Fomat of Video file.\r\n  \r\nProject Page: <https://github.com/leixiaohua1020/simplest_ffmpeg_format>\r\n\r\n### Simplest ffmpeg video filter\r\n_use FFmpeg's AVFilter to add watermark in a video file_  \r\nThis project contains 2 projects:\r\n* simplest_ffmpeg_video_filter: Put a PNG picture as watermark to a video file, use some libraries such as libavfilter and libavcodec.\r\n* simplest_ffmpeg_video_filter_pure：Add excellent effect to YUV raw data, only use libavfilter.\r\nProject Page: <https://github.com/leixiaohua1020/simplest_ffmpeg_video_filter>\r\n\r\n### Simplest ffmpeg swscale\r\n_Examples about handle pixel data using libswscale in FFmpeg_  \r\nProject Page: <https://github.com/leixiaohua1020/simplest_ffmpeg_swscale>\r\n\r\n### Simplest FFmpeg AVUtil\r\n_Example about FFmpeg's libavutil_  \r\nProject Page: <https://github.com/leixiaohua1020/simplest_ffmpeg_avutil>\r\n\r\n### Simplest ffmpeg Mobile\r\n_ffmpeg examples in Android / IOS_  \r\nThis project contains examples about handling multi-media data based on FFmpeg on mobile device.\r\n* [Android]\r\n* simplest_android_player: Video player based on Android API\r\n* simplest_ffmpeg_android_helloworld: Simplest HelloWorld program based on FFmpeg in Android.\r\n* simplest_ffmpeg_android_decoder: Simplest decoder based on FFmpeg in Android.\r\n* simplest_ffmpeg_android_decoder_onelib: Simplest decoder based on FFmpeg in Android - One Library.\r\n* simplest_ffmpeg_android_streamer: Simplest streamer based on FFmpeg in Android.\r\n* simplest_ffmpeg_android_transcoder: Transcoder transplant from ffmpeg.c in Android.\r\n* simplest_sdl_android_helloworld: Simplest program based on SDL in Android.\r\n* [IOS]\r\n* simplest_ios_player: Video player based on IOS API\r\n* simplest_ffmpeg_ios_helloworld: Simplest HelloWorld program based on FFmpeg in IOS.\r\n* simplest_ffmpeg_ios_decoder: Simplest decoder based on FFmpeg in IOS.\r\n* simplest_ffmpeg_ios_streamer: Simplest streamer based on FFmpeg in IOS.\r\n* simplest_ffmpeg_ios_transcoder: Transcoder transplant from ffmpeg.c in IOS.\r\n* simplest_sdl_ios_helloworld: Simplest program based on SDL in IOS.\r\n* [Win Phone]\r\n* simplest_ffmpeg_winphone_helloworld: Simplest HelloWorld program based on FFmpeg in Windows Phone.\r\n\r\nProject Page: <https://github.com/leixiaohua1020/simplest_ffmpeg_mobile>\r\n\r\n\r\n*************************\r\n\r\n## FFmpeg Transplant Projects\r\n\r\n### ffplay for MFC\r\n_ffplay transplant to MFC_  \r\nProject Page: <https://github.com/leixiaohua1020/ffplaymfc>\r\n\r\n### ffmpeg for MFC\r\n_ffmpeg transplant to MFC_  \r\nProject Page: <https://github.com/leixiaohua1020/ffmpegmfc>\r\n\r\n*************************\r\n\r\n## Multimedia Projects Development Examples\r\n\r\n### simplest media play\r\n_Examples about video/audio's playing_  \r\nIt contains following programs:  \r\n* simplest_audio_play_directsound:Play PCM raw audio data using DirectSound.\r\n* simplest_audio_play_sdl2:Play PCM raw audio data using SDL2.\r\n* simplest_video_play_direct3d:Play RGB/YUV raw video data using Direct3D's Surface.\r\n* simplest_video_play_direct3d_texture:Play RGB raw video data using Direct3D's Texture.\r\n* simplest_video_play_gdi:Play RGB/YUV raw video data using GDI.\r\n* simplest_video_play_opengl:Play RGB/YUV raw video data using OpenGL.\r\n* simplest_video_play_opengl_texture:Play YUV raw video data using OpenGL's Texture.\r\n* simplest_video_play_sdl2:Play RGB/YUV raw video data using SDL2.\r\n  \r\nProject Page: <https://github.com/leixiaohua1020/simplest_media_play>\r\n\r\n### simplest encoder\r\n_Examples about video encoders_  \r\nThis solutions contains examples about video encoders:\r\n* simplest_vpx_encoder: simplest encoder based on libvpx\r\n* simplest_x264_encoder:  simplest encoder based on libx264\r\n* simplest_x265_encoder:  simplest encoder based on libx265\r\n  \r\nProject Page: <https://github.com/leixiaohua1020/simplest_encoder>\r\n\r\n### simplest libRTMP example\r\n_Examples about usage of libRTMP_  \r\nIt contains following projects:\r\n* simplest_librtmp_receive: Receive RTMP streams and save as FLV file.\r\n* simplest_librtmp_send_flv: Stream FLV file to RTMP streaming server.\r\n* simplest_librtmp_send264: Stream H.264 raw data to RTMP streaming server.\r\n  \r\nProject Page: <https://github.com/leixiaohua1020/simplest_librtmp_example>\r\n\r\n### simplest libVLC example\r\n_Examples about libVLC_  \r\nIt contains following project:\r\n* playerGUI: Simplest libVLC Player GUI.\r\n* simplest_libvlc_example: Simplest libVLC Player.\r\n* simplest_libvlc_streamer: Simplest libVLC Streamer.\r\n  \r\nProject Page: <https://github.com/leixiaohua1020/simplest_libvlc_example>\r\n\r\n### simplest directshow example\r\n_Simple Examples about DirectShow_  \r\nIt contains following projects:\r\n* simplest_directshow_player: Simplest DirectShow Player.\r\n* simplest_directshow_player_custom: Simplest DirectShow Player (Custom).\r\n* playerGUI: Simplest DirectShow Player GUI.\r\n* simplest_directshow_info: Simplest DirectShow Info.\r\n* simplest_directshow_filter: Unfinished yet.\r\n  \r\nProject Page: <https://github.com/leixiaohua1020/simplest_directshow_example>\r\n\r\n### simplest flashmedia example\r\n_simple examples about using flash player to play RTMP/HTTP/HLS_  \r\nThis project contains following examples about Flash streaming media:\r\n* simplest_as3_rtmp_player:      Simplest RTMP Player(ActionScript)\r\n* simplest_as3_rtmp_streamer:    Simplest RTMP Streamer (ActionScript)\r\n* rtmp_sample_player_adobe:      Sample Player extracted from Adobe Flash Media Server\r\n* rtmp_sample_player_wowza:      Sample Player extracted from Wowza Server\r\n* rtmp_sample_player_flowplayer: RTMP/HTTP Player based on FlowPlayer (with RTMP plugin)\r\n* rtmp_sample_player_videojs:    RTMP/HTTP Player based on VideoJS\r\n* rtmp_sample_player_jwplayer:   RTMP/HTTP Player based on JWPlayer\r\n* hls_sample_player_flowplayer:  HLS Player based on FlowPlayer (with HLS plugin)\r\n* hls_video_player_html5:        HLS/HTTP Player based on HTML5\r\n* activex_vlc_player:            Video Player based on VLC ActiveX\r\n\r\nNote: Some example couldn't work directly. You should upload them to web server such as Nginx or Apache.\r\n  \r\nProject Page: <https://github.com/leixiaohua1020/simplest_flashmedia_example>\r\n\r\n### simplest_video_website\r\n_simplest video website based JavaEE and FFmpeg_  \r\nThis software is the simplest video website.\r\nIt support live broadcast and VOD\r\n\r\nProject Page: <https://github.com/leixiaohua1020/simplest_video_website>\r\n\r\n*************************\r\n\r\n## Small Analysis Tools\r\n\r\n### H264 Analysis\r\n_A H.264 stream analysis software based on MFC_  \r\nProject Page: <https://github.com/leixiaohua1020/h264_analysis>",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}